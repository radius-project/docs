name: Project Radius Website

on:
  push:
    branches:
      - edge
    paths:
      - 'docs/**'
      - '.github/workflows/website.yaml'
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - edge
    paths:
      - 'docs/**'
      - '.github/workflows/website.yaml'

jobs:
  build:
    name: Build Hugo Website
    if: github.event.action != 'closed'
    runs-on: self-hosted
    env:
      GOVER: '^1.17'
      TUTORIAL_PATH: './docs/content/getting-started/tutorial/'
      CODE_ZIP_PATH: './docs/static/tutorial/'
      HUGO_ENV: production
    steps:
      - name: Checkout docs repo
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Checkout radius repo
        uses: actions/checkout@v2
        with:
          repository: project-radius/radius
          path: ./radius
          token: ${{ secrets.GH_PAT }}
      - name: Setup Go ${{ env.GOVER }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVER }}
      - name: Setup NPM
        run: sudo apt update && sudo apt install npm -y
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2.5.0
        with:
          hugo-version: 0.74.3
          extended: true
      - name: Setup Docsy
        run: cd docs && git submodule update --init --recursive && sudo npm install -D --save autoprefixer && sudo npm install -D --save postcss-cli
      - name: Generate CLI Docs
        run: cd radius && go run ./cmd/docgen/main.go ../docs/content/reference/cli
      - name: Generate Code ZIP Packages
        run: mkdir -p $CODE_ZIP_PATH && for tutorial in $TUTORIAL_PATH*; do if [ -d "${tutorial}/code" ]; then cp -r $tutorial/code ./$(basename $tutorial) && zip -r $CODE_ZIP_PATH$(basename $tutorial).zip ./$(basename $tutorial) ; fi; done
      - name: Build Hugo Site
        run: cd docs && hugo
      - name: Upload Hugo artifacts
        uses: actions/upload-artifact@master
        with:
          name: hugo_build
          path: ./docs/public/
          if-no-files-found: error
  
  deploy:
    name: Deploy Hugo Website
    if: github.event_name == 'push'
    needs: ['build']
    runs-on: self-hosted
    steps:
      - name: Download Hugo artifacts
        uses: actions/download-artifact@v2
        with:
          name: hugo_build
          path: site/
      - name: Deploy to WebApp
        uses: Azure/webapps-deploy@v2
        with:
          app-name: radius-edge
          publish-profile: ${{ secrets.EDGE_DOCS_SITE_PUBLISHPROFILE }}
          package: site/

  open_pr_site:
    name: Open PR Staging Site
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    needs: ['build']
    runs-on: self-hosted
    steps:
      - name: Download Hugo artifacts
        uses: actions/download-artifact@v2
        with:
          name: hugo_build
          path: site/
      - name: Deploy staging site
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.STAGING_DOCS_SITE_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "site/"
          api_location: "site/" 
          output_location: ""
          skip_app_build: true

  close_pr_site:
    name: Close PR Staging Site
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: self-hosted
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.STAGING_DOCS_SITE_TOKEN }}
          action: "close"

  algolia_index:
    name: Index site for Algolia
    if: github.event_name == 'push'
    needs: ['build', 'deploy']
    runs-on: self-hosted
    env:
      ALGOLIA_APP_ID: O0QLQGNF38
      ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
      ALGOLIA_INDEX_NAME: radapp-dev
    steps:
      - name: Download Hugo artifacts
        uses: actions/download-artifact@v2
        with:
          name: hugo_build
          path: site/
      - name: Install Python packages
        run: |
          pip install --upgrade bs4
          pip install --upgrade 'algoliasearch>=2.0,<3.0'
      - name: Index site
        run: python ./.github/scripts/algolia.py ./site
